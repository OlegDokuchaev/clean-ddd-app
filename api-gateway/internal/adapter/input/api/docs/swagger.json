{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/couriers": {
            "post": {
                "description": "Register a new courier with name, password and phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "couriers"
                ],
                "summary": "Register new courier",
                "parameters": [
                    {
                        "description": "Courier registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier_request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Courier created successfully",
                        "schema": {
                            "$ref": "#/definitions/courier_response.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "409": {
                        "description": "Courier with this phone already exists",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid data format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/couriers/login": {
            "post": {
                "description": "Authenticate a courier and get a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "couriers"
                ],
                "summary": "Courier login",
                "parameters": [
                    {
                        "description": "Courier login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/courier_request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/courier_response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "404": {
                        "description": "Courier not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/couriers/me/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all current orders for the authenticated courier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "couriers"
                ],
                "summary": "Get courier orders",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "schema": {
                            "$ref": "#/definitions/order_response.OrdersResponse"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid bearer token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/customers": {
            "post": {
                "description": "Register a new customer with name, password and phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Register new customer",
                "parameters": [
                    {
                        "description": "Customer registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer_request.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer created successfully",
                        "schema": {
                            "$ref": "#/definitions/customer_response.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "409": {
                        "description": "Customer with this phone already exists",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid data format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/customers/login": {
            "post": {
                "description": "Authenticate a customer and get a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "customers"
                ],
                "summary": "Customer login",
                "parameters": [
                    {
                        "description": "Customer login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/customer_request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/customer_response.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/items": {
            "get": {
                "description": "Get a list of all items available in the warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Get all warehouse items",
                "responses": {
                    "200": {
                        "description": "List of items",
                        "schema": {
                            "$ref": "#/definitions/warehouse_response.ItemsResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/items/decrease": {
            "patch": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Decrease the quantity of items in the warehouse (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Decrease items quantity",
                "parameters": [
                    {
                        "description": "Items to decrease quantity",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehouse_request.ReleaseItemsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " \"Quantity decreased successfully"
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid access token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid item data or insufficient quantity",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/items/increase": {
            "patch": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Increase the quantity of items in the warehouse (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "items"
                ],
                "summary": "Increase items quantity",
                "parameters": [
                    {
                        "description": "Items to increase quantity",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehouse_request.ReserveItemsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " \"Quantity increased successfully"
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid access token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "404": {
                        "description": "Item not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid item data",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all orders for the authenticated customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get customer orders",
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "schema": {
                            "$ref": "#/definitions/order_response.OrdersResponse"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid bearer token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new order with items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create a new order",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/order_request.CreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": " \"Created with location header"
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid bearer token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid item data",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/orders/{id}/cancel": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cancel an order by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Cancel an order",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": " \"No Content"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid bearer token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid order ID format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/orders/{id}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark an order as delivered (completed)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Update order status to delivered",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": " \"OK"
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid bearer token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid order ID format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        },
        "/products": {
            "post": {
                "security": [
                    {
                        "AccessToken": []
                    }
                ],
                "description": "Create a new product in the warehouse (admin only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/warehouse_request.CreateProductRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "schema": {
                            "$ref": "#/definitions/warehouse_response.CreateProductResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "401": {
                        "description": "Missing or invalid access token",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "409": {
                        "description": "Product already exists",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "422": {
                        "description": "Invalid product data",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseDetail"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "courier_request.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "courier_request.RegisterRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "courier_response.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "courier_response.RegisterResponse": {
            "type": "object",
            "properties": {
                "courier_id": {
                    "type": "string"
                }
            }
        },
        "customer_request.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "phone"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "customer_request.RegisterRequest": {
            "type": "object",
            "required": [
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "customer_response.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "customer_response.RegisterResponse": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                }
            }
        },
        "order_request.CreateRequest": {
            "type": "object",
            "required": [
                "address",
                "items"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/order_request.ItemSchema"
                    }
                }
            }
        },
        "order_request.ItemSchema": {
            "type": "object",
            "required": [
                "count",
                "price",
                "product_id"
            ],
            "properties": {
                "count": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "string"
                }
            }
        },
        "order_response.DeliverySchema": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "arrived": {
                    "type": "string"
                },
                "courier_id": {
                    "type": "string"
                }
            }
        },
        "order_response.ItemSchema": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "string"
                }
            }
        },
        "order_response.OrderResponse": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "delivery": {
                    "$ref": "#/definitions/order_response.DeliverySchema"
                },
                "id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order_response.ItemSchema"
                    }
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "order_response.OrdersResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/order_response.OrderResponse"
                    }
                }
            }
        },
        "response.ErrorResponseDetail": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                }
            }
        },
        "warehouse_request.CreateProductRequest": {
            "type": "object",
            "required": [
                "name",
                "price"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "warehouse_request.ItemInfoSchema": {
            "type": "object",
            "required": [
                "count",
                "product_id"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 1
                },
                "product_id": {
                    "type": "string"
                }
            }
        },
        "warehouse_request.ReleaseItemsRequest": {
            "type": "object",
            "required": [
                "items"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/warehouse_request.ItemInfoSchema"
                    }
                }
            }
        },
        "warehouse_request.ReserveItemsRequest": {
            "type": "object",
            "required": [
                "items"
            ],
            "properties": {
                "items": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/warehouse_request.ItemInfoSchema"
                    }
                }
            }
        },
        "warehouse_response.CreateProductResponse": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string"
                }
            }
        },
        "warehouse_response.ItemResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "item_id": {
                    "type": "string"
                },
                "product": {
                    "$ref": "#/definitions/warehouse_response.ProductSchema"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "warehouse_response.ItemsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/warehouse_response.ItemResponse"
                    }
                }
            }
        },
        "warehouse_response.ProductSchema": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "string"
                }
            }
        }
    }
}